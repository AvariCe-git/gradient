#!/bin/bash


##############################################
#
# This script creates a 16bit png test image,
# and converts it to a 10bit test video to
# test the color depth support of displays.
#
# command specifications
x265="../../x265/build/linux/x265"
x264="../../x264/x264"
ffmpeg="../../ffmpeg/ffmpeg"
#
# video size in pixel
width=720
height=480
#
##############################################


# check dependencies
hash convert 2>/dev/null || { echo >&2 "This script requires ImageMagic but it's not installed.  Aborting."; exit 1; }

hash $ffmpeg 2>/dev/null || { echo >&2 "This script requires ffmpeg but it's not installed.  Aborting."; exit 1; }
$ffmpeg -pix_fmts 2>&1 |grep yuv444p10 >/dev/null || { echo >&2 "It seems to me, that ffmpeg was not built with 10bit support.  Aborting."; exit 1; }


# check TMPDIR
if [ ! -d "$TMPDIR" ]; then
  TMPDIR="./"
fi


# calculate parameters
filename=test_$width-${height}_

for pixelformat in yuv420p10le yuv422p10le yuv444p10le gbrp10le; do

  echo $xelformati
  convert -depth 16 -size ${width}x${height} xc:white \
	-fill "#000000000000" -draw "rectangle 0,0 179,239" \
	-fill "#00000000ffff" -draw "rectangle 180,0 359,239" \
	-fill "#0000ffff0000" -draw "rectangle 360,0 539,239" \
	-fill "#0000ffffffff" -draw "rectangle 540,0 719,239" \
	-fill "#ffff00000000" -draw "rectangle 0,240 179,479" \
        -fill "#ffff0000ffff" -draw "rectangle 180,240 359,479" \
        -fill "#ffffffff0000" -draw "rectangle 360,240 539,479" \
        -fill "#ffffffffffff" -draw "rectangle 540,240 719,479" \
	-pointsize 36 -annotate +50+50 "$pixelformat x265" \
       	test_$pixelformat.png
  $ffmpeg -y -loop 1 -t 10 -framerate 5 -i test_$pixelformat.png -f mp4 -c:v libx265 -x265-params lossless=1:range=full -pix_fmt $pixelformat -tag:v hvc1 -movflags faststart test_${pixelformat}_x265.mp4
  rm test_$pixelformat.png
done

for pixelformat in yuv420p10le yuv422p10le yuv444p10le; do

  echo $xelformati
  convert -depth 16 -size ${width}x${height} xc:white \
        -fill "#000000000000" -draw "rectangle 0,0 179,239" \
        -fill "#00000000ffff" -draw "rectangle 180,0 359,239" \
        -fill "#0000ffff0000" -draw "rectangle 360,0 539,239" \
        -fill "#0000ffffffff" -draw "rectangle 540,0 719,239" \
        -fill "#ffff00000000" -draw "rectangle 0,240 179,479" \
        -fill "#ffff0000ffff" -draw "rectangle 180,240 359,479" \
        -fill "#ffffffff0000" -draw "rectangle 360,240 539,479" \
        -fill "#ffffffffffff" -draw "rectangle 540,240 719,479" \
        -pointsize 36 -annotate +50+50 "$pixelformat x264" \
        test_$pixelformat.png
  $ffmpeg -y -loop 1 -t 10 -framerate 5 -i test_$pixelformat.png -f mp4 -c:v libx264 -crf 0 -pix_fmt $pixelformat -movflags faststart test_${pixelformat}_x264.mp4
  rm test_$pixelformat.png
done

exit 0

#  convert -depth 16 $filename.png -fill "#ffffffffffff" -pointsize 16 -gravity SouthEast -annotate +0+30 'gradient v1.2 - http://jursonovics.com - This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/.' $filename.png



# encode and package video with x265 10-bit support...
if [ -f ${filename}_x265.mp4 ]; then

  echo "skip x265 encoding, $filename.mp4 file does exist"

else

  echo "converting png to h265 and packaging video file"
  $ffmpeg -y -loop 1 -t 10 -framerate 5 -i $filename.png -f mp4 -c:v libx265 -pix_fmt yuv420p10 -preset veryslow -b:v 1000000 -tag:v hvc1 -movflags faststart ${filename}_x265.mp4
fi

# encode and package video with x264 10-bit support...
if [ -f ${filename}_x264.mp4 ]; then

  echo "skip x264 encoding, ${filename}_x264.mp4 file does exist"

else

  echo "converting png to h264 and packaging video file"
  $ffmpeg -y -loop 1 -t 10 -framerate 5 -i $filename.png -f mp4 -c:v libx264 -pix_fmt yuv420p10 -preset veryslow -b:v 1000000 -movflags faststart ${filename}_x264.mp4
fi



